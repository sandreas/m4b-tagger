/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'javafx-gradle-plugin'


mainClassName = 'de.fynder.m4b_tagger.Main'


sourceSets {
    main {
        resources {
            srcDirs = ["src/main/java"]
            includes = ["**/*.fxml", "**/*.css"]
            excludes = ["**/*.md"]
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}


dependencies {
    // classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'

    // The production code uses the SLF4J logging API at compile time
    compile(
//            'org.slf4j:slf4j-api:1.7.21',
//            'org.mp4parser:isoparser:1.9.31',
//            'org.mp4parser:muxer:1.9.31',
//            'org.mp4parser:streaming:1.9.31',
            'joda-time:joda-time:2.9.9',
            'net.bramp.ffmpeg:ffmpeg:0.6.1',

            'com.airhacks:afterburner.fx:1.6.0',

//            'de.jensd:fontawesomefx-emojione:3.1.1-9',
            'de.jensd:fontawesomefx-fontawesome:4.7.0-5',
//            'de.jensd:fontawesomefx-icons525:4.2.0-9',
//            'de.jensd:fontawesomefx-materialdesignfont:2.0.26-9',
//            'de.jensd:fontawesomefx-materialicons:2.2.0-9',
//            'de.jensd:fontawesomefx-octicons:4.3.0-9',
//            'de.jensd:fontawesomefx-weathericons:2.0.10-9',
            'de.jensd:fontawesomefx-commons:8.15',
            'de.jensd:fontawesomefx-controls:8.15',

//            'de.jensd:fontawesomefx:8.15',
//            'de.jensd:fontawesomefx-commons:8.15',
//            'de.jensd:fontawesomefx-controls:8.15',
//            'de.jensd:fontawesomefx-fontawesome:4.7.0-5',
//             'de.jensd:fontawesomefx-commons:8.15'

//            'de.jensd:fontawesomefx-materialdesignfont:1.6.50'
//             'de.jensd:fontawesomefx-materialicons:2.2.0'
//             'de.jensd:fontawesomefx-octicons:4.3.0'
//             'de.jensd:fontawesomefx-icons525:2.6.0'
//             'de.jensd:fontawesomefx-weathericons:2.0-3'

//            'org.jcodec:jcodec:0.2.1' // https://github.com/jcodec/jcodec
//            'net.sourceforge.jaadec:jaad:0.8.4',
//            'org.jcodec:jcodec:0.2.2-SNAPSHOT' // latest snapshot from lib
            //'org.jcodec:jcodec:0.2.1'
//             'com.github.jcodec:jcodec:mp4_metadata_editor-SNAPSHOT'

    )

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile(
            'junit:junit:5.+',
            'org.mockito:mockito-core:2.+'
    )
}

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }
    repositories {
        mavenLocal()
        mavenCentral()

    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url "https://dl.bintray.com/jerady/maven"
    }
    flatDir {
        dirs 'libs'
    }
}

/*
gradle jfxJar - Create executable JavaFX-jar
gradle jfxNative - Create native JavaFX-bundle (will run jfxJar first)
gradle jfxRun - Create the JavaFX-jar and runs it like you would do using java -jar my-project-jfx.jar, adjustable using runJavaParameter/runAppParameter-parameter
gradle jfxGenerateKeyStore - Create a Java keystore
gradle jfxListBundlers - List all possible bundlers available on this system, use '--info' parameter for detailed information

see https://github.com/FibreFoX/javafx-gradle-plugin
*/
jfx {
    // minimal requirement for jfxJar-task
    mainClass = mainClassName

    // minimal requirement for jfxNative-task
    vendor = 'Fynder.de'

    jfxMainAppJarName = "m4b-tagger.jar"
}